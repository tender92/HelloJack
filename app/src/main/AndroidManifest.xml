<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.tender.hellojack">

    <!-- JPush start -->
    <permission
        android:name="${applicationId}.permission.JPUSH_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="${applicationId}.permission.JPUSH_MESSAGE" />
    <uses-permission android:name="android.permission.RECEIVE_USER_PRESENT" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />

    <!-- Optional for location -->
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" /> <!-- 用于开启 debug 版本的应用在6.0 系统上 层叠窗口权限 -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS" />
    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
    <uses-permission android:name="android.permission.GET_TASKS" />

    <!-- JPush end -->
    <application
        android:name=".manager.MyApplication"
        android:allowBackup="true"
        android:supportsRtl="true"
        android:theme="@style/hj_tools_AppTheme">

        <!-- 百度定位key -->
        <meta-data
            android:name="com.baidu.lbsapi.API_KEY"
            android:value="p1IPBbhKrAbCgqk0zGTPSS6VMz4fdnOu" />

        <!-- 百度语音合成开始 -->
        <meta-data
            android:name="com.baidu.apiID"
            android:value="10317037" />
        <meta-data
            android:name="com.baidu.apiKey"
            android:value="p1IPBbhKrAbCgqk0zGTPSS6VMz4fdnOu" />
        <meta-data
            android:name="com.baidu.secretKey"
            android:value="X4tUGeF7fzETpngXcXnoa0FPPhnDGAsh" />
        <!-- 百度语音合成结束 -->


        <!-- JPush start -->
        <!-- Rich push 核心功能 since 2.0.6 -->
        <activity
            android:name="cn.jpush.android.ui.PopWinActivity"
            android:exported="false"
            android:theme="@style/MyDialogStyle" />

        <!-- Required SDK核心功能 -->
        <activity
            android:name="cn.jpush.android.ui.PushActivity"
            android:configChanges="orientation|keyboardHidden"
            android:exported="false"
            android:theme="@android:style/Theme.NoTitleBar">
            <intent-filter>
                <action android:name="cn.jpush.android.ui.PushActivity" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="${applicationId}" />
            </intent-filter>
        </activity>

        <!-- Required SDK 核心功能 -->
        <!-- 可配置android:process参数将PushService放在其他进程中 -->
        <service
            android:name="cn.jpush.android.service.PushService"
            android:enabled="true"
            android:exported="false">
            <intent-filter>
                <action android:name="cn.jpush.android.intent.REGISTER" />
                <action android:name="cn.jpush.android.intent.REPORT" />
                <action android:name="cn.jpush.android.intent.PushService" />
                <action android:name="cn.jpush.android.intent.PUSH_TIME" />
            </intent-filter>
        </service>

        <!-- since 3.0.9 Required SDK 核心功能 -->
        <provider
            android:name="cn.jpush.android.service.DataProvider"
            android:authorities="com.tender.hellojack.debug.DataProvider"
            android:exported="true"
            tools:replace="android:authorities" />

        <!-- since 1.8.0 option 可选项。用于同一设备中不同应用的JPush服务相互拉起的功能。 -->
        <!-- 若不启用该功能可删除该组件，将不拉起其他应用也不能被其他应用拉起 -->
        <service
            android:name="cn.jpush.android.service.DaemonService"
            android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="cn.jpush.android.intent.DaemonService" />

                <category android:name="${applicationId}" />
            </intent-filter>
        </service>

        <receiver
            android:name="cn.jpush.android.service.PushReceiver"
            android:enabled="true"
            android:exported="false">
            <intent-filter android:priority="1000">
                <action android:name="cn.jpush.android.intent.NOTIFICATION_RECEIVED_PROXY" /> <!-- Required  显示通知栏 -->
                <category android:name="${applicationId}" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.USER_PRESENT" />
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
            </intent-filter>
            <!-- Optional -->
            <intent-filter>
                <action android:name="android.intent.action.PACKAGE_ADDED" />
                <action android:name="android.intent.action.PACKAGE_REMOVED" />

                <data android:scheme="package" />
            </intent-filter>
        </receiver>
        <!-- Required  SDK核心功能 -->


        <!-- Required SDK核心功能 -->
        <receiver
            android:name="cn.jpush.android.service.AlarmReceiver"
            android:exported="false" />

        <!-- User defined.  For test only  用户自定义的广播接收器 -->
        <receiver
            android:name=".receiver.JPushReceiver"
            android:enabled="true"
            android:exported="false">
            <intent-filter>
                <action android:name="cn.jpush.android.intent.REGISTRATION" /> <!-- Required  用户注册SDK的intent -->
                <action android:name="cn.jpush.android.intent.UNREGISTRATION" />
                <action android:name="cn.jpush.android.intent.MESSAGE_RECEIVED" /> <!-- Required  用户接收SDK消息的intent -->
                <action android:name="cn.jpush.android.intent.NOTIFICATION_RECEIVED" /> <!-- Required  用户接收SDK通知栏信息的intent -->
                <action android:name="cn.jpush.android.intent.NOTIFICATION_OPENED" /> <!-- Required  用户打开自定义通知栏的intent -->
                <action android:name="cn.jpush.android.intent.ACTION_RICHPUSH_CALLBACK" /> <!-- Optional 用户接受Rich Push Javascript 回调函数的intent -->
                <action android:name="cn.jpush.android.intent.CONNECTION" /> <!-- 接收网络变化 连接/断开 since 1.6.3 -->
                <category android:name="${applicationId}" />
            </intent-filter>
        </receiver>

        <!-- User defined.  For test only  用户自定义接收消息器,3.0.7开始支持,目前新tag/alias接口设置结果会在该广播接收器对应的方法中回调 -->
        <!-- <receiver android:name=""> -->
        <!-- <intent-filter> -->
        <!-- <action android:name="cn.jpush.android.intent.RECEIVE_MESSAGE" /> -->
        <!-- <category android:name="${applicationId}"></category> -->
        <!-- </intent-filter> -->
        <!-- </receiver> -->
        <!-- Jpush end -->

        <service android:name=".service.SpeechService" />

        <activity
            android:name=".business.start.StartActivity"
            android:screenOrientation="portrait"
            android:theme="@style/hj_tools_StartTheme">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <!-- <activity -->
        <!-- android:name=".business.home.HomeActivity" -->
        <!-- android:configChanges="keyboardHidden|orientation" /> -->
        <activity android:name=".business.myinfo.MyInfoActivity" />
        <activity android:name=".TestActivity" />
        <activity android:name=".business.home.HomeActivity" />
        <activity android:name=".business.myinfo.qrcodecard.QRCodeCardActivity" />
        <activity android:name=".business.myinfo.changename.ChangeNameActivity" />
        <activity android:name=".business.myinfo.changesignature.ChangeSignatureActivity" />
        <activity android:name=".business.login.LoginActivity" />
        <activity android:name=".business.register.RegisterActivity" />
        <activity android:name=".business.mine.cardpacket.CardPacketActivity" />
        <activity android:name=".business.mine.cardpacket.coupon.CouponActivity" />
        <activity android:name=".business.mine.scan.ScanActivity" />
        <activity android:name=".business.webview.WebViewActivity" />
        <activity android:name=".business.mine.myfriends.MyFriendsActivity" />
        <activity android:name=".business.userinfo.UserInfoActivity" />
        <activity android:name=".business.session.SessionActivity" />
        <activity android:name=".business.setting.SettingActivity" />
        <activity android:name=".business.tasks.TasksActivity" />
        <activity android:name=".business.tasks.listdetail.ListDetailActivity" />
        <activity android:name=".business.tasks.addtasktolist.AddTaskToListActivity" />
        <activity android:name=".business.tasks.taskdetail.TaskDetailActivity" />
        <activity android:name=".business.guide.GuideActivity" />
        <activity android:name=".business.guide.guideone.GuideOneActivity" />
        <activity android:name=".business.home.once.OnceActivity" />
        <activity android:name=".business.translate.TranslateActivity" />
        <activity android:name=".business.showimage.ShowImageActivity" />
    </application>

</manifest>
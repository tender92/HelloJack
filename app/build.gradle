apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply from: "../config.gradle"

configurations.all {
    //Error:Conflict with dependency ‘com.google.code.findbugs:jsr305’
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
}

android {
    compileSdkVersion COMPILE_SDK_VERSION
    buildToolsVersion BUILD_TOOL_VERSION
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    defaultConfig {
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        applicationId "com.tender.hellojack"
        versionCode 1
        versionName "1.0"
        resourcePrefix "hj_"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86','x86_64'
            // 还可以添加 'mips', 'mips64'
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            jniLibs.srcDirs = ['libs']
        }
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    signingConfigs {
        debug {
            storeFile file("sign/hellojack.jks")
            storePassword "12345678"
            keyAlias "hellojacktest"
            keyPassword = "12345678"
        }
        release {
            storeFile file("sign/hellojack.jks")
            storePassword "12345678"
            keyAlias "hellojacktest"
            keyPassword = "12345678"
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            applicationIdSuffix '.debug'
            signingConfig signingConfigs.debug

            manifestPlaceholders = [
                    JPUSH_PKGNAME : 'com.tender.hellojack.debug',
                    JPUSH_APPKEY : "18ab73bd09b84add39c36d06", //JPush上注册的包名对应的appkey.
                    JPUSH_CHANNEL : "developer-default", //⽤户渠道统计的渠道名称
            ]
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            manifestPlaceholders = [
                    JPUSH_PKGNAME : 'com.tender.hellojack.debug',
                    JPUSH_APPKEY : "18ab73bd09b84add39c36d06", //JPush上注册的包名对应的appkey.
                    JPUSH_CHANNEL : "developer-default", //⽤户渠道统计的渠道名称
            ]
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':umeng-statistics')
    compile project(':common-tools')
    compile project(':location-service')
    compile project(':message-push')
    compile project(':baidu-tts')
    compile project(':instant-message')
//    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
//        exclude group: 'com.android.support', module: 'support-annotations'
//    })
    compile "com.android.support:appcompat-v7:${ANDROID_DESIGN_SUPPORT_VERSION}"
    compile "com.android.support:design:${ANDROID_DESIGN_SUPPORT_VERSION}"

    compile "io.reactivex:rxjava:${RXJAVA_VERSION}"
    compile "io.reactivex:rxandroid:${RXANDROID_VERSION}"
    compile "com.trello:rxlifecycle-android:${RXLIFESYCLE_VERSION}"
    compile "com.trello:rxlifecycle:${RXLIFESYCLE_VERSION}"
    compile("com.trello:rxlifecycle-components:${RXLIFESYCLE_VERSION}") {
        exclude group: 'com.android.support'
    }
    compile "com.jakewharton.rxbinding:rxbinding:${RXBINDING_VERSION}"
    compile "com.jakewharton:butterknife:${BUTTER_KNIFE_VERSION}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${BUTTER_KNIFE_VERSION}"
    compile "pub.devrel:easypermissions:${QRCODE_SCAN_VERSION}"
//    testCompile 'junit:junit:4.12'
}

task hello {
    println("nicle")

    doFirst {
        println("hello")
    }

    doLast {
        println("goodbye")
    }
}